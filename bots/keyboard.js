const env = require('../.env')
const Telegraf = require('telegraf')
const Markup = require('telegraf/markup')
const bot = new Telegraf(env.token)

const keyboardMyWorks = Markup.keyboard([
  ['ü§ñ Bots', 'ü§ñ Deploy', 'ü§ñ SysAdmin'],
  ['ü§ñ Automatiza√ß√£o', 'ü§ñ Software', 'üîê Seguran√ßa'],
  ['ü§ñ BDA', 'ü§ñ Microservi√ßos', 'üìà An√°lise De Sistemas']
]).resize().extra()

const keyboardMyTasks = Markup.keyboard([
  ['üèÜ Carreira Profissional', 'üìö Estudos', 'üßñ‚Äç‚ôÇ Higieniza√ß√£o'],
  ['üèã‚Äç‚ôÇ Exerc√≠cio F√≠sico', 'üßò‚Äç‚ôÇ Medita√ß√£o', 'üìö Leitura'],
  ['‚å® Codifica√ß√£o', 'üí∞ + Capital', 'üíâ Sa√∫de'],
  ['üóû Not√≠cias']
]).resize().extra()

const keyboardMyStudies = Markup.keyboard([
  ['üëæ Desenvolvimento De Software', 'üëæ Implanta√ß√£o De Servi√ßos/Software', 'ü§ñ Automatiza√ß√£o De Tarefas'],
  ['üõ° Seguran√ßa Cibern√©tica', 'üíµ Investimentos', '‚è± Administra√ß√£o Geral'],
  ['‚öñ Direito Cibern√©tico', '‚öñ Direito Do Consumidor', '‚öñ Direito Trabalhista'],
  ['üí∏ Economia'],
]).resize().extra()

const keyboardMyShopping = Markup.keyboard([
  ['üìî Livros', 'üéñ Cursos', 'üìë Certifica√ß√µes'],
  ['üè´ Acad√™micos', '‚úà Passagens', '‚õ¥ Cruzeiros'],
  ['üëî Vestimentos', 'üíæ Hardwares']
]).resize().extra()

const keyboardMyDreams = Markup.keyboard([
  ['‚ù§ Casamento', 'üè∞ Castelo', 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Fam√≠lia'],
  ['üõ° Prote√ß√£o', 'üë£ Prever Crimes/Erros'],
]).resize().extra()

const keyboardMyCommunities = Markup.keyboard([
  ['üè¥‚Äç‚ò† ArgoCrew', 'üíâ Hacking Health']
]).resize().extra()

const keyboardMyBusiness = Markup.keyboard([
  [' ***', ' ***', ' ***']
]).resize().extra()

const keyboardGiftsForMyLove = Markup.keyboard([
  ['üëë', 'üëë', 'üëë'],
  ['üéÆ PS5', 'üíª MacBook', 'üì± IPhone X'],
  ['üëë', 'üëë', 'üëë'], 
  ['‚úà Viagens', 'üëë', 'üëë']
]).resize().extra()

const keyboardGiftsForMySon = Markup.keyboard([
  ['üéÆ PS5', 'üï∂ √ìculos Realidade Virtual', 'üïπ N3DS'],
  ['üéÅ Cole√ß√£o LEGOüß©', '‚úà Passeio Disney', 'üõç Vestimentos'],
  [' ***', ' ***', ' ***'],
  [' ***', ' ***', ' ***'],
]).resize().extra()

const keyboardObligationsToMySon = Markup.keyboard([
  ['‚úç Tarefas De Casa', ' Higieniza√ß√£o', 'üìò Estudos'],
  ['üò∑ Dentista', 'üë©‚Äç‚öï Pediatra', ' Organiza√ß√£o']
]).resize().extra()


bot.start(async context => {
  
  await context.reply(`Ol√° Mestre! ${context.update.message.from.first_name}!`)
  await context.reply(`Em que posso ser √∫til?`, 
  	Markup.keyboard(['Trabalho', 'Tarefas', 'Estudos', 'Compras', 'Futura Esposa', 'Filho', 'Neg√≥cios', 'Comunidades', 'Sonhos']).resize().oneTime().extra())
})

// *******************
// **** TRABALHOS ****
// *******************
bot.hears('Trabalho', async context => {
  
  await context.reply(`Ah Bacana! Vamos ver o que temos de obriga√ß√µes para seu ${context.match} Senhor`)
  await context.reply('Qual seria sua ordem de servi√ßo para hoje Mestre?', keyboardMyWorks)
})

bot.hears('ü§ñ Bots', context => context.reply('Ok! Ent√£o vamos para as op√ß√µes de Bots, espero que n√£o queira me substituir Senhor!'))
bot.hears('ü§ñ Deploy', context => context.reply('Bacana, mais uma aplica√ß√£o mandaremos para o ar!'))
bot.hears('ü§ñ SysAdmin', context => context.reply('Vamos gerenciar qual Sistema Operacional, Senhor?'))
bot.hears('ü§ñ Automatiza√ß√£o', context => context.reply('O que deseja automatizar?'))
bot.hears('ü§ñ Software', context => context.reply('Em quais tecnologias deseja desenvolver o Software?'))
bot.hears('üîê Seguran√ßa', context => context.reply('Hum, seguran√ßa nunca √© de mais. Irei mostrar nossas ferramentas!'))


// *******************
// ***** TAREFAS *****
// *******************
bot.hears('Tarefas', async context => {
  
  await context.reply(`Hum vejo que tem ${context.match} a ser realizadas Senhor`)
  await context.reply('Qual delas deseja iniciar?', keyboardMyTasks)
})

bot.hears('üèÜ Carreira Profissional', context => context.reply('Ok Senhor, vamos ver o rendimento de sua carreira!'))
bot.hears('üìö Estudos', context => context.reply('Bacana, continuaremos os estudos Mestre!'))
bot.hears('üßñ‚Äç‚ôÇ Higieniza√ß√£o', context => context.reply('Est√° na hora de uma limpeza Senhor!'))
bot.hears('üèã‚Äç‚ôÇ Exerc√≠cio F√≠sico', context => context.reply('O que deseja automatizar?'))
bot.hears('üßò‚Äç‚ôÇ Medita√ß√£o', context => context.reply('Que tal separarmos alguns minutos para medita√ß√£o?'))
bot.hears('üìö Leitura', context => context.reply('Estudos √© sempre bom, a cada absor√ß√£o de conhecimentos melhor ser√° estruturada sua mente!'))
bot.hears('‚å® Codifica√ß√£o', context => context.reply('Vamos programar em que Senhor?'))
bot.hears('üí∞ + Capital', context => context.reply('Vejo que precisa de mais capitais Senhor, vamos ver algumas sugest√µes para gerar isto!'))
bot.hears('üíâ Sa√∫de', context => context.reply('Sa√∫de em primeiro lugar, e agora vamos solucionar isto!'))
bot.hears('üóû Not√≠cias', context => context.reply('Vamos escolher quais tipos de not√≠cias e em quais lugares deseja ver!'))

// *******************
// ***** ESTUDOS *****
// *******************
bot.hears('Estudos', async context => {
  
  await context.reply(`Precisa continuar seus ${context.match} Senhor, at√© se tornar um grande Mestre`)	
  await context.reply('Qual dos t√≥picos podemos continuar ou iniciar?', keyboardMyStudies)
})


// *******************
// ***** COMPRAS *****
// *******************
bot.hears('Compras', async context => {
  
  await context.reply(`Opa! uma ${context.match} Senhor, ok vamos gastar um pouco!`)
  await context.reply('O que deseja comprar Mestre?', keyboardMyShopping)
})

// *******************
// ***** ESPOSA ******
// *******************
bot.hears('Futura Esposa', async context => {
  
  await context.reply(`Hum que amor, presentes para a ${context.match} e isso √© √≥timo Senhor`)	
  await context.reply('O que deseja para ela?', keyboardGiftsForMyLove)
})


// ***************************
// **** OBRIGA√á√ïES FILHO *****
// ***************************
bot.hears('Obriga√ß√µes Filho', async context => {
  
  await context.reply(`Ok Senhor! vamos saber mais sobre as ${context.match}`)
  await context.reply('Que tal escolher uma de suas obriga√ß√µes para saber seu rendimento?', keyboardObligationsToMySon)
})

// ***************************
// **** PRESENTES FILHO ******
// ***************************
bot.hears('Presentear o Filho', async context => {
  
  await context.reply(`Ok Senhor! espero que seu filho esteja indo bem na escola para ${context.match}`)
  await context.reply('Qual presente deseja dar para ele?', keyboardGiftsForMySon)
})


// ***************************
// ********* NEG√ìCIOS ********
// ***************************
bot.hears('Neg√≥cios', async context => {
  
  await context.reply(`Ah que bacana! vamos saber mais de seus ${context.match}`)
  await context.reply('Acho uma boa id√©ia selecionar o neg√≥cio que mais precisa de seu apoio Senhor', keyboardMyBusiness)
})



// ***************************
// ******* COMUNIDADES *******
// ***************************
bot.hears('Comunidades', async context => {
  
  await context.reply(`Ah que legal! vamos da uma olhada como anda nas ${context.match} que voc√™ participa`)
  await context.reply('Escolha a comunidade Senhor', keyboardMyCommunities)
})


// ***************************
// ********* SONHOS **********
// ***************************
bot.hears('Sonhos', async context => {
  
  await context.reply(`Nossa que bacana! Tem ${context.match} a ser realizados Senhor`)	
  await context.reply('Que tal escolher o que est√° mais motivado a realizar?', keyboardMyDreams)
})

bot.on('text', context => context.reply('Bom, acho que hoje n√£o posso ser √∫til para o Senhor!'))
// Start Bot
bot.startPolling()